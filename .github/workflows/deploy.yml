name: Deploy Spring Boot Project

on:
  push:
    branches: [ main ] # main 브랜치에 push될 때만 실행

jobs:
  deploy: 
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

      SPRING_REDIS_HOST: ${{ secrets.SPRING_REDIS_HOST }}
      SPRING_REDIS_PORT: ${{ secrets.SPRING_REDIS_PORT }}

      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

      RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
      RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
      RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}

      ELASTICSEARCH_URIS: ${{ secrets.ELASTICSEARCH_URIS }}
      ELASTIC_USERNAME: ${{ secrets.ELASTIC_USERNAME }}
      ELASTIC_PASSWORD: ${{ secrets.ELASTIC_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17 
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Grant permission for Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Generate env-info.txt
        run: |
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" > env-info.txt
          echo "빌드 시 환경 변수 작성 완료"

      - name: Upload env-info.txt to S3
        run: |
          aws s3 cp env-info.txt s3://hipreader/build/env-info.txt --region ap-northeast-2
